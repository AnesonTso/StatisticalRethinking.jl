method = sample (Default)
method = sample (Default)
  sample
    num_samples = 1000 (Default)
    num_warmup = 1000 (Default)
    save_warmup = 0 (Default)
    thin = 1 (Default)
  sample
    adapt
      engaged = 1 (Default)
    num_samples = 1000 (Default)
    num_warmup = 1000 (Default)
    save_warmup = 0 (Default)
      gamma = 0.050000000000000003 (Default)
    thin = 1 (Default)
    adapt
      delta = 0.80000000000000004 (Default)
      engaged = 1 (Default)
      kappa = 0.75 (Default)
      t0 = 10 (Default)
      gamma = 0.050000000000000003 (Default)
      init_buffer = 75 (Default)
      delta = 0.80000000000000004 (Default)
      term_buffer = 50 (Default)
      window = 25 (Default)
      kappa = 0.75 (Default)
    algorithm = hmc (Default)
      hmc
      t0 = 10 (Default)
        engine = nuts (Default)
      init_buffer = 75 (Default)
          nuts
      term_buffer = 50 (Default)
            max_depth = 10 (Default)
      window = 25 (Default)
        metric = diag_e (Default)
    algorithm = hmc (Default)
        metric_file =  (Default)
      hmc
        engine = nuts (Default)
        stepsize = 1 (Default)
          nuts
        stepsize_jitter = 1
            max_depth = 10 (Default)
id = 2
        metric = diag_e (Default)
data
        metric_file =  (Default)
  file = binomial_2.data.R
        stepsize = 1 (Default)
init = 2 (Default)
random
        stepsize_jitter = 1
  seed = 322706052
id = 1
output
data
  file = binomial_samples_2.csv
  file = binomial_1.data.R
  diagnostic_file =  (Default)
init = 2 (Default)
  refresh = 100 (Default)
random

  seed = 322706052
output
  file = binomial_samples_1.csv
  diagnostic_file =  (Default)
  refresh = 100 (Default)



Gradient evaluation took 1.1e-05 seconds
Gradient evaluation took 1.2e-05 seconds
1000 transitions using 10 leapfrog steps per transition would take 0.11 seconds.
1000 transitions using 10 leapfrog steps per transition would take 0.12 seconds.
Adjust your expectations accordingly!
Adjust your expectations accordingly!




Iteration:    1 / 2000 [  0%]  (Warmup)
Iteration:    1 / 2000 [  0%]  (Warmup)
Iteration:  100 / 2000 [  5%]  (Warmup)
Iteration:  100 / 2000 [  5%]  (Warmup)
Iteration:  200 / 2000 [ 10%]  (Warmup)
method = sample (Default)
  sample
    num_samples = 1000 (Default)
    num_warmup = 1000 (Default)
    save_warmup = 0 (Default)
    thin = 1 (Default)
    adapt
      engaged = 1 (Default)
      gamma = 0.050000000000000003 (Default)
      delta = 0.80000000000000004 (Default)
      kappa = 0.75 (Default)
      t0 = 10 (Default)
      init_buffer = 75 (Default)
      term_buffer = 50 (Default)
      window = 25 (Default)
    algorithm = hmc (Default)
      hmc
        engine = nuts (Default)
          nuts
            max_depth = 10 (Default)
        metric = diag_e (Default)
        metric_file =  (Default)
        stepsize = 1 (Default)
        stepsize_jitter = 1
id = 3
data
  file = binomial_3.data.R
init = 2 (Default)
random
  seed = 322706060
output
  file = binomial_samples_3.csv
  diagnostic_file =  (Default)
  refresh = 100 (Default)

Iteration:  300 / 2000 [ 15%]  (Warmup)

Gradient evaluation took 5e-06 seconds
1000 transitions using 10 leapfrog steps per transition would take 0.05 seconds.
Adjust your expectations accordingly!


Iteration:    1 / 2000 [  0%]  (Warmup)
Iteration:  400 / 2000 [ 20%]  (Warmup)
Iteration:  500 / 2000 [ 25%]  (Warmup)
method = sample (Default)
  sample
    num_samples = 1000 (Default)
    num_warmup = 1000 (Default)
    save_warmup = 0 (Default)
    thin = 1 (Default)
    adapt
      engaged = 1 (Default)
      gamma = 0.050000000000000003 (Default)
      delta = 0.80000000000000004 (Default)
      kappa = 0.75 (Default)
      t0 = 10 (Default)
      init_buffer = 75 (Default)
      term_buffer = 50 (Default)
      window = 25 (Default)
    algorithm = hmc (Default)
      hmc
        engine = nuts (Default)
          nuts
            max_depth = 10 (Default)
        metric = diag_e (Default)
        metric_file =  (Default)
        stepsize = 1 (Default)
        stepsize_jitter = 1
id = 4
data
  file = binomial_4.data.R
init = 2 (Default)
random
  seed = 322706064
output
  file = binomial_samples_4.csv
  diagnostic_file =  (Default)
  refresh = 100 (Default)


Gradient evaluation took 6e-06 seconds
1000 transitions using 10 leapfrog steps per transition would take 0.06 seconds.
Adjust your expectations accordingly!


Iteration:    1 / 2000 [  0%]  (Warmup)
Iteration:  600 / 2000 [ 30%]  (Warmup)
Iteration:  200 / 2000 [ 10%]  (Warmup)
Iteration:  700 / 2000 [ 35%]  (Warmup)
Iteration:  800 / 2000 [ 40%]  (Warmup)
Iteration:  300 / 2000 [ 15%]  (Warmup)
Iteration:  900 / 2000 [ 45%]  (Warmup)
Iteration:  100 / 2000 [  5%]  (Warmup)
Iteration: 1000 / 2000 [ 50%]  (Warmup)
Iteration: 1001 / 2000 [ 50%]  (Sampling)
Iteration: 1100 / 2000 [ 55%]  (Sampling)
Iteration:  100 / 2000 [  5%]  (Warmup)
Iteration:  400 / 2000 [ 20%]  (Warmup)
Iteration: 1200 / 2000 [ 60%]  (Sampling)
Iteration:  500 / 2000 [ 25%]  (Warmup)
Iteration: 1300 / 2000 [ 65%]  (Sampling)
Iteration:  200 / 2000 [ 10%]  (Warmup)
Iteration:  300 / 2000 [ 15%]  (Warmup)
Iteration: 1400 / 2000 [ 70%]  (Sampling)
Iteration:  200 / 2000 [ 10%]  (Warmup)
Iteration: 1500 / 2000 [ 75%]  (Sampling)
Iteration:  300 / 2000 [ 15%]  (Warmup)
Iteration:  600 / 2000 [ 30%]  (Warmup)
Iteration: 1600 / 2000 [ 80%]  (Sampling)
Iteration:  700 / 2000 [ 35%]  (Warmup)
Iteration: 1700 / 2000 [ 85%]  (Sampling)
Iteration:  800 / 2000 [ 40%]  (Warmup)
Iteration:  900 / 2000 [ 45%]  (Warmup)
Iteration: 1800 / 2000 [ 90%]  (Sampling)
Iteration: 1000 / 2000 [ 50%]  (Warmup)
Iteration: 1001 / 2000 [ 50%]  (Sampling)
Iteration:  400 / 2000 [ 20%]  (Warmup)
Iteration: 1900 / 2000 [ 95%]  (Sampling)
Iteration:  500 / 2000 [ 25%]  (Warmup)
Iteration:  600 / 2000 [ 30%]  (Warmup)
Iteration: 2000 / 2000 [100%]  (Sampling)

 Elapsed Time: 0.019903 seconds (Warm-up)
               0.030856 seconds (Sampling)
               0.050759 seconds (Total)

Iteration:  400 / 2000 [ 20%]  (Warmup)
Iteration:  700 / 2000 [ 35%]  (Warmup)
Iteration:  800 / 2000 [ 40%]  (Warmup)
Iteration:  500 / 2000 [ 25%]  (Warmup)
Iteration:  600 / 2000 [ 30%]  (Warmup)
Iteration:  700 / 2000 [ 35%]  (Warmup)
Iteration: 1100 / 2000 [ 55%]  (Sampling)
Iteration:  800 / 2000 [ 40%]  (Warmup)
Iteration:  900 / 2000 [ 45%]  (Warmup)
Iteration:  900 / 2000 [ 45%]  (Warmup)
Iteration: 1000 / 2000 [ 50%]  (Warmup)
Iteration: 1001 / 2000 [ 50%]  (Sampling)
Iteration: 1000 / 2000 [ 50%]  (Warmup)
Iteration: 1001 / 2000 [ 50%]  (Sampling)
Iteration: 1200 / 2000 [ 60%]  (Sampling)
Iteration: 1100 / 2000 [ 55%]  (Sampling)
Iteration: 1100 / 2000 [ 55%]  (Sampling)
Iteration: 1200 / 2000 [ 60%]  (Sampling)
Iteration: 1300 / 2000 [ 65%]  (Sampling)
Iteration: 1300 / 2000 [ 65%]  (Sampling)
Iteration: 1400 / 2000 [ 70%]  (Sampling)
Iteration: 1200 / 2000 [ 60%]  (Sampling)
Iteration: 1500 / 2000 [ 75%]  (Sampling)
Iteration: 1400 / 2000 [ 70%]  (Sampling)
Iteration: 1600 / 2000 [ 80%]  (Sampling)
Iteration: 1300 / 2000 [ 65%]  (Sampling)
Iteration: 1700 / 2000 [ 85%]  (Sampling)
Iteration: 1500 / 2000 [ 75%]  (Sampling)
Iteration: 1800 / 2000 [ 90%]  (Sampling)
Iteration: 1600 / 2000 [ 80%]  (Sampling)
Iteration: 1900 / 2000 [ 95%]  (Sampling)
Iteration: 1400 / 2000 [ 70%]  (Sampling)
Iteration: 2000 / 2000 [100%]  (Sampling)

 Elapsed Time: 0.020424 seconds (Warm-up)
               0.033379 seconds (Sampling)
               0.053803 seconds (Total)

Iteration: 1500 / 2000 [ 75%]  (Sampling)
Iteration: 1700 / 2000 [ 85%]  (Sampling)
Iteration: 1600 / 2000 [ 80%]  (Sampling)
Iteration: 1800 / 2000 [ 90%]  (Sampling)
Iteration: 1700 / 2000 [ 85%]  (Sampling)
Iteration: 1900 / 2000 [ 95%]  (Sampling)
Iteration: 1800 / 2000 [ 90%]  (Sampling)
Iteration: 2000 / 2000 [100%]  (Sampling)

 Elapsed Time: 0.021492 seconds (Warm-up)
               0.03505 seconds (Sampling)
               0.056542 seconds (Total)

Iteration: 1900 / 2000 [ 95%]  (Sampling)
Iteration: 2000 / 2000 [100%]  (Sampling)

 Elapsed Time: 0.020945 seconds (Warm-up)
               0.031616 seconds (Sampling)
               0.052561 seconds (Total)

