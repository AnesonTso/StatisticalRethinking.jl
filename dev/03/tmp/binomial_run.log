method = sample (Default)
method = sample (Default)
  sample
  sample
    num_samples = 1000 (Default)
    num_samples = 1000 (Default)
    num_warmup = 1000 (Default)
    num_warmup = 1000 (Default)
    save_warmup = 0 (Default)
    thin = 1 (Default)
    adapt
      engaged = 1 (Default)
    save_warmup = 0 (Default)
    thin = 1 (Default)
      gamma = 0.050000000000000003 (Default)
    adapt
      engaged = 1 (Default)
      delta = 0.80000000000000004 (Default)
      kappa = 0.75 (Default)
      gamma = 0.050000000000000003 (Default)
      t0 = 10 (Default)
      delta = 0.80000000000000004 (Default)
      init_buffer = 75 (Default)
      term_buffer = 50 (Default)
      kappa = 0.75 (Default)
      window = 25 (Default)
      t0 = 10 (Default)
    algorithm = hmc (Default)
      init_buffer = 75 (Default)
      hmc
      term_buffer = 50 (Default)
        engine = nuts (Default)
      window = 25 (Default)
          nuts
    algorithm = hmc (Default)
            max_depth = 10 (Default)
      hmc
        metric = diag_e (Default)
        engine = nuts (Default)
        metric_file =  (Default)
          nuts
            max_depth = 10 (Default)
        stepsize = 1 (Default)
        metric = diag_e (Default)
        stepsize_jitter = 1
        metric_file =  (Default)
id = 2
data
        stepsize = 1 (Default)
  file = binomial_2.data.R
        stepsize_jitter = 1
init = 2 (Default)
id = 1
random
data
  seed = 1774236540
  file = binomial_1.data.R
output
init = 2 (Default)
  file = binomial_samples_2.csv
random
  diagnostic_file =  (Default)
  seed = 1774236540
  refresh = 100 (Default)
output

  file = binomial_samples_1.csv
  diagnostic_file =  (Default)
  refresh = 100 (Default)



Gradient evaluation took 1.1e-05 seconds
Gradient evaluation took 1.1e-05 seconds
1000 transitions using 10 leapfrog steps per transition would take 0.11 seconds.
1000 transitions using 10 leapfrog steps per transition would take 0.11 seconds.
Adjust your expectations accordingly!
Adjust your expectations accordingly!




Iteration:    1 / 2000 [  0%]  (Warmup)
Iteration:    1 / 2000 [  0%]  (Warmup)
Iteration:  100 / 2000 [  5%]  (Warmup)
Iteration:  100 / 2000 [  5%]  (Warmup)
Iteration:  200 / 2000 [ 10%]  (Warmup)
Iteration:  200 / 2000 [ 10%]  (Warmup)
Iteration:  300 / 2000 [ 15%]  (Warmup)
Iteration:  300 / 2000 [ 15%]  (Warmup)
method = sample (Default)
  sample
    num_samples = 1000 (Default)
    num_warmup = 1000 (Default)
    save_warmup = 0 (Default)
    thin = 1 (Default)
    adapt
      engaged = 1 (Default)
      gamma = 0.050000000000000003 (Default)
      delta = 0.80000000000000004 (Default)
      kappa = 0.75 (Default)
      t0 = 10 (Default)
      init_buffer = 75 (Default)
      term_buffer = 50 (Default)
      window = 25 (Default)
    algorithm = hmc (Default)
      hmc
        engine = nuts (Default)
          nuts
            max_depth = 10 (Default)
        metric = diag_e (Default)
        metric_file =  (Default)
        stepsize = 1 (Default)
        stepsize_jitter = 1
id = 3
data
  file = binomial_3.data.R
init = 2 (Default)
random
  seed = 1774236551
output
  file = binomial_samples_3.csv
  diagnostic_file =  (Default)
  refresh = 100 (Default)


Gradient evaluation took 1.1e-05 seconds
1000 transitions using 10 leapfrog steps per transition would take 0.11 seconds.
Adjust your expectations accordingly!


Iteration:    1 / 2000 [  0%]  (Warmup)
Iteration:  400 / 2000 [ 20%]  (Warmup)
Iteration:  500 / 2000 [ 25%]  (Warmup)
Iteration:  100 / 2000 [  5%]  (Warmup)
Iteration:  600 / 2000 [ 30%]  (Warmup)
Iteration:  700 / 2000 [ 35%]  (Warmup)
Iteration:  400 / 2000 [ 20%]  (Warmup)
method = sample (Default)
  sample
    num_samples = 1000 (Default)
    num_warmup = 1000 (Default)
    save_warmup = 0 (Default)
    thin = 1 (Default)
    adapt
      engaged = 1 (Default)
      gamma = 0.050000000000000003 (Default)
      delta = 0.80000000000000004 (Default)
      kappa = 0.75 (Default)
      t0 = 10 (Default)
      init_buffer = 75 (Default)
      term_buffer = 50 (Default)
      window = 25 (Default)
    algorithm = hmc (Default)
      hmc
        engine = nuts (Default)
          nuts
            max_depth = 10 (Default)
        metric = diag_e (Default)
        metric_file =  (Default)
        stepsize = 1 (Default)
        stepsize_jitter = 1
id = 4
data
  file = binomial_4.data.R
init = 2 (Default)
random
  seed = 1774236559
output
  file = binomial_samples_4.csv
  diagnostic_file =  (Default)
  refresh = 100 (Default)


Gradient evaluation took 6e-06 seconds
1000 transitions using 10 leapfrog steps per transition would take 0.06 seconds.
Adjust your expectations accordingly!


Iteration:    1 / 2000 [  0%]  (Warmup)
Iteration:  500 / 2000 [ 25%]  (Warmup)
Iteration:  800 / 2000 [ 40%]  (Warmup)
Iteration:  600 / 2000 [ 30%]  (Warmup)
Iteration:  900 / 2000 [ 45%]  (Warmup)
Iteration:  700 / 2000 [ 35%]  (Warmup)
Iteration:  200 / 2000 [ 10%]  (Warmup)
Iteration:  100 / 2000 [  5%]  (Warmup)
Iteration:  300 / 2000 [ 15%]  (Warmup)
Iteration:  200 / 2000 [ 10%]  (Warmup)
Iteration:  400 / 2000 [ 20%]  (Warmup)
Iteration: 1000 / 2000 [ 50%]  (Warmup)
Iteration: 1001 / 2000 [ 50%]  (Sampling)
Iteration:  500 / 2000 [ 25%]  (Warmup)
Iteration: 1100 / 2000 [ 55%]  (Sampling)
Iteration:  600 / 2000 [ 30%]  (Warmup)
Iteration:  800 / 2000 [ 40%]  (Warmup)
Iteration:  300 / 2000 [ 15%]  (Warmup)
Iteration:  900 / 2000 [ 45%]  (Warmup)
Iteration:  400 / 2000 [ 20%]  (Warmup)
Iteration: 1000 / 2000 [ 50%]  (Warmup)
Iteration: 1001 / 2000 [ 50%]  (Sampling)
Iteration: 1200 / 2000 [ 60%]  (Sampling)
Iteration: 1100 / 2000 [ 55%]  (Sampling)
Iteration:  700 / 2000 [ 35%]  (Warmup)
Iteration:  500 / 2000 [ 25%]  (Warmup)
Iteration:  800 / 2000 [ 40%]  (Warmup)
Iteration:  600 / 2000 [ 30%]  (Warmup)
Iteration:  900 / 2000 [ 45%]  (Warmup)
Iteration:  700 / 2000 [ 35%]  (Warmup)
Iteration: 1000 / 2000 [ 50%]  (Warmup)
Iteration: 1001 / 2000 [ 50%]  (Sampling)
Iteration:  800 / 2000 [ 40%]  (Warmup)
Iteration: 1300 / 2000 [ 65%]  (Sampling)
Iteration: 1200 / 2000 [ 60%]  (Sampling)
Iteration: 1400 / 2000 [ 70%]  (Sampling)
Iteration: 1300 / 2000 [ 65%]  (Sampling)
Iteration:  900 / 2000 [ 45%]  (Warmup)
Iteration: 1100 / 2000 [ 55%]  (Sampling)
Iteration: 1000 / 2000 [ 50%]  (Warmup)
Iteration: 1001 / 2000 [ 50%]  (Sampling)
Iteration: 1200 / 2000 [ 60%]  (Sampling)
Iteration: 1300 / 2000 [ 65%]  (Sampling)
Iteration: 1100 / 2000 [ 55%]  (Sampling)
Iteration: 1500 / 2000 [ 75%]  (Sampling)
Iteration: 1400 / 2000 [ 70%]  (Sampling)
Iteration: 1600 / 2000 [ 80%]  (Sampling)
Iteration: 1500 / 2000 [ 75%]  (Sampling)
Iteration: 1700 / 2000 [ 85%]  (Sampling)
Iteration: 1600 / 2000 [ 80%]  (Sampling)
Iteration: 1400 / 2000 [ 70%]  (Sampling)
Iteration: 1200 / 2000 [ 60%]  (Sampling)
Iteration: 1500 / 2000 [ 75%]  (Sampling)
Iteration: 1300 / 2000 [ 65%]  (Sampling)
Iteration: 1600 / 2000 [ 80%]  (Sampling)
Iteration: 1800 / 2000 [ 90%]  (Sampling)
Iteration: 1700 / 2000 [ 85%]  (Sampling)
Iteration: 1900 / 2000 [ 95%]  (Sampling)
Iteration: 1800 / 2000 [ 90%]  (Sampling)
Iteration: 2000 / 2000 [100%]  (Sampling)

 Elapsed Time: 0.020796 seconds (Warm-up)
               0.03067 seconds (Sampling)
               0.051466 seconds (Total)

Iteration: 1700 / 2000 [ 85%]  (Sampling)
Iteration: 1400 / 2000 [ 70%]  (Sampling)
Iteration: 1800 / 2000 [ 90%]  (Sampling)
Iteration: 1500 / 2000 [ 75%]  (Sampling)
Iteration: 1900 / 2000 [ 95%]  (Sampling)
Iteration: 1600 / 2000 [ 80%]  (Sampling)
Iteration: 1900 / 2000 [ 95%]  (Sampling)
Iteration: 1700 / 2000 [ 85%]  (Sampling)
Iteration: 2000 / 2000 [100%]  (Sampling)

 Elapsed Time: 0.020543 seconds (Warm-up)
               0.031757 seconds (Sampling)
               0.0523 seconds (Total)

Iteration: 2000 / 2000 [100%]  (Sampling)

 Elapsed Time: 0.020649 seconds (Warm-up)
               0.025799 seconds (Sampling)
               0.046448 seconds (Total)

Iteration: 1800 / 2000 [ 90%]  (Sampling)
Iteration: 1900 / 2000 [ 95%]  (Sampling)
Iteration: 2000 / 2000 [100%]  (Sampling)

 Elapsed Time: 0.020544 seconds (Warm-up)
               0.031208 seconds (Sampling)
               0.051752 seconds (Total)

