method = sample (Default)
method = sample (Default)
  sample
  sample
    num_samples = 2000
    num_samples = 2000
    num_warmup = 2000
    num_warmup = 2000
    save_warmup = 0 (Default)
    save_warmup = 0 (Default)
    thin = 1 (Default)
    thin = 1 (Default)
    adapt
    adapt
      engaged = 1 (Default)
      engaged = 1 (Default)
      gamma = 0.050000000000000003 (Default)
      gamma = 0.050000000000000003 (Default)
      delta = 0.80000000000000004 (Default)
      delta = 0.80000000000000004 (Default)
      kappa = 0.75 (Default)
      kappa = 0.75 (Default)
      t0 = 10 (Default)
      t0 = 10 (Default)
      init_buffer = 75 (Default)
      init_buffer = 75 (Default)
      term_buffer = 50 (Default)
      term_buffer = 50 (Default)
      window = 25 (Default)
      window = 25 (Default)
    algorithm = hmc (Default)
    algorithm = hmc (Default)
      hmc
      hmc
        engine = nuts (Default)
        engine = nuts (Default)
          nuts
          nuts
            max_depth = 10 (Default)
            max_depth = 10 (Default)
        metric = diag_e (Default)
        metric = diag_e (Default)
        metric_file =  (Default)
        metric_file =  (Default)
        stepsize = 1 (Default)
        stepsize = 1 (Default)
        stepsize_jitter = 1
        stepsize_jitter = 1
id = 2
id = 1
data
data
  file = m12.6.1_2.data.R
  file = m12.6.1_1.data.R
init = 2 (Default)
init = 2 (Default)
random
random
  seed = 2717818702
  seed = 2717818702
output
output
  file = m12.6.1_samples_2.csv
  file = m12.6.1_samples_1.csv
  diagnostic_file =  (Default)
  diagnostic_file =  (Default)
  refresh = 100 (Default)
  refresh = 100 (Default)




Gradient evaluation took 1.1e-05 seconds
Gradient evaluation took 1.2e-05 seconds
1000 transitions using 10 leapfrog steps per transition would take 0.11 seconds.
1000 transitions using 10 leapfrog steps per transition would take 0.12 seconds.
Adjust your expectations accordingly!
Adjust your expectations accordingly!




Iteration:    1 / 4000 [  0%]  (Warmup)
Iteration:    1 / 4000 [  0%]  (Warmup)
method = sample (Default)
  sample
    num_samples = 2000
    num_warmup = 2000
    save_warmup = 0 (Default)
    thin = 1 (Default)
    adapt
      engaged = 1 (Default)
      gamma = 0.050000000000000003 (Default)
      delta = 0.80000000000000004 (Default)
      kappa = 0.75 (Default)
      t0 = 10 (Default)
      init_buffer = 75 (Default)
      term_buffer = 50 (Default)
      window = 25 (Default)
    algorithm = hmc (Default)
      hmc
        engine = nuts (Default)
          nuts
            max_depth = 10 (Default)
        metric = diag_e (Default)
        metric_file =  (Default)
        stepsize = 1 (Default)
        stepsize_jitter = 1
id = 3
data
  file = m12.6.1_3.data.R
init = 2 (Default)
random
  seed = 2717818708
output
  file = m12.6.1_samples_3.csv
  diagnostic_file =  (Default)
  refresh = 100 (Default)


Gradient evaluation took 8e-06 seconds
1000 transitions using 10 leapfrog steps per transition would take 0.08 seconds.
Adjust your expectations accordingly!


Iteration:    1 / 4000 [  0%]  (Warmup)
method = sample (Default)
  sample
    num_samples = 2000
    num_warmup = 2000
    save_warmup = 0 (Default)
    thin = 1 (Default)
    adapt
      engaged = 1 (Default)
      gamma = 0.050000000000000003 (Default)
      delta = 0.80000000000000004 (Default)
      kappa = 0.75 (Default)
      t0 = 10 (Default)
      init_buffer = 75 (Default)
      term_buffer = 50 (Default)
      window = 25 (Default)
    algorithm = hmc (Default)
      hmc
        engine = nuts (Default)
          nuts
            max_depth = 10 (Default)
        metric = diag_e (Default)
        metric_file =  (Default)
        stepsize = 1 (Default)
        stepsize_jitter = 1
id = 4
data
  file = m12.6.1_4.data.R
init = 2 (Default)
random
  seed = 2717818716
output
  file = m12.6.1_samples_4.csv
  diagnostic_file =  (Default)
  refresh = 100 (Default)


Gradient evaluation took 1.9e-05 seconds
1000 transitions using 10 leapfrog steps per transition would take 0.19 seconds.
Adjust your expectations accordingly!


Iteration:    1 / 4000 [  0%]  (Warmup)
Iteration:  100 / 4000 [  2%]  (Warmup)
Iteration:  200 / 4000 [  5%]  (Warmup)
Iteration:  100 / 4000 [  2%]  (Warmup)
Iteration:  100 / 4000 [  2%]  (Warmup)
Iteration:  100 / 4000 [  2%]  (Warmup)
Iteration:  300 / 4000 [  7%]  (Warmup)
Iteration:  200 / 4000 [  5%]  (Warmup)
Iteration:  200 / 4000 [  5%]  (Warmup)
Iteration:  200 / 4000 [  5%]  (Warmup)
Iteration:  400 / 4000 [ 10%]  (Warmup)
Iteration:  500 / 4000 [ 12%]  (Warmup)
Iteration:  300 / 4000 [  7%]  (Warmup)
Iteration:  300 / 4000 [  7%]  (Warmup)
Iteration:  300 / 4000 [  7%]  (Warmup)
Iteration:  600 / 4000 [ 15%]  (Warmup)
Iteration:  400 / 4000 [ 10%]  (Warmup)
Iteration:  400 / 4000 [ 10%]  (Warmup)
Iteration:  400 / 4000 [ 10%]  (Warmup)
Iteration:  700 / 4000 [ 17%]  (Warmup)
Iteration:  500 / 4000 [ 12%]  (Warmup)
Iteration:  800 / 4000 [ 20%]  (Warmup)
Iteration:  500 / 4000 [ 12%]  (Warmup)
Iteration:  500 / 4000 [ 12%]  (Warmup)
Iteration:  600 / 4000 [ 15%]  (Warmup)
Iteration:  600 / 4000 [ 15%]  (Warmup)
Iteration:  600 / 4000 [ 15%]  (Warmup)
Iteration:  900 / 4000 [ 22%]  (Warmup)
Iteration:  700 / 4000 [ 17%]  (Warmup)
Iteration:  700 / 4000 [ 17%]  (Warmup)
Iteration:  800 / 4000 [ 20%]  (Warmup)
Iteration:  700 / 4000 [ 17%]  (Warmup)
Iteration: 1000 / 4000 [ 25%]  (Warmup)
Iteration:  800 / 4000 [ 20%]  (Warmup)
Iteration:  800 / 4000 [ 20%]  (Warmup)
Iteration:  900 / 4000 [ 22%]  (Warmup)
Iteration: 1100 / 4000 [ 27%]  (Warmup)
Iteration:  900 / 4000 [ 22%]  (Warmup)
Iteration: 1000 / 4000 [ 25%]  (Warmup)
Iteration:  900 / 4000 [ 22%]  (Warmup)
Iteration: 1200 / 4000 [ 30%]  (Warmup)
Iteration: 1000 / 4000 [ 25%]  (Warmup)
Iteration: 1100 / 4000 [ 27%]  (Warmup)
Iteration: 1000 / 4000 [ 25%]  (Warmup)
Iteration: 1300 / 4000 [ 32%]  (Warmup)
Iteration: 1100 / 4000 [ 27%]  (Warmup)
Iteration: 1200 / 4000 [ 30%]  (Warmup)
Iteration: 1100 / 4000 [ 27%]  (Warmup)
Iteration: 1400 / 4000 [ 35%]  (Warmup)
Iteration: 1200 / 4000 [ 30%]  (Warmup)
Iteration: 1300 / 4000 [ 32%]  (Warmup)
Iteration: 1500 / 4000 [ 37%]  (Warmup)
Iteration: 1200 / 4000 [ 30%]  (Warmup)
Iteration: 1300 / 4000 [ 32%]  (Warmup)
Iteration: 1400 / 4000 [ 35%]  (Warmup)
Iteration: 1600 / 4000 [ 40%]  (Warmup)
Iteration: 1300 / 4000 [ 32%]  (Warmup)
Iteration: 1400 / 4000 [ 35%]  (Warmup)
Iteration: 1500 / 4000 [ 37%]  (Warmup)
Iteration: 1700 / 4000 [ 42%]  (Warmup)
Iteration: 1400 / 4000 [ 35%]  (Warmup)
Iteration: 1500 / 4000 [ 37%]  (Warmup)
Iteration: 1600 / 4000 [ 40%]  (Warmup)
Iteration: 1800 / 4000 [ 45%]  (Warmup)
Iteration: 1500 / 4000 [ 37%]  (Warmup)
Iteration: 1700 / 4000 [ 42%]  (Warmup)
Iteration: 1600 / 4000 [ 40%]  (Warmup)
Iteration: 1900 / 4000 [ 47%]  (Warmup)
Iteration: 1800 / 4000 [ 45%]  (Warmup)
Iteration: 1600 / 4000 [ 40%]  (Warmup)
Iteration: 1700 / 4000 [ 42%]  (Warmup)
Iteration: 1900 / 4000 [ 47%]  (Warmup)
Iteration: 1700 / 4000 [ 42%]  (Warmup)
Iteration: 2000 / 4000 [ 50%]  (Warmup)
Iteration: 2001 / 4000 [ 50%]  (Sampling)
Iteration: 1800 / 4000 [ 45%]  (Warmup)
Iteration: 1800 / 4000 [ 45%]  (Warmup)
Iteration: 2000 / 4000 [ 50%]  (Warmup)
Iteration: 1900 / 4000 [ 47%]  (Warmup)
Iteration: 2001 / 4000 [ 50%]  (Sampling)
Iteration: 2100 / 4000 [ 52%]  (Sampling)
Iteration: 1900 / 4000 [ 47%]  (Warmup)
Iteration: 2000 / 4000 [ 50%]  (Warmup)
Iteration: 2001 / 4000 [ 50%]  (Sampling)
Iteration: 2100 / 4000 [ 52%]  (Sampling)
Iteration: 2000 / 4000 [ 50%]  (Warmup)
Iteration: 2001 / 4000 [ 50%]  (Sampling)
Iteration: 2200 / 4000 [ 55%]  (Sampling)
Iteration: 2100 / 4000 [ 52%]  (Sampling)
Iteration: 2200 / 4000 [ 55%]  (Sampling)
Iteration: 2100 / 4000 [ 52%]  (Sampling)
Iteration: 2200 / 4000 [ 55%]  (Sampling)
Iteration: 2300 / 4000 [ 57%]  (Sampling)
Iteration: 2300 / 4000 [ 57%]  (Sampling)
Iteration: 2200 / 4000 [ 55%]  (Sampling)
Iteration: 2300 / 4000 [ 57%]  (Sampling)
Iteration: 2400 / 4000 [ 60%]  (Sampling)
Iteration: 2400 / 4000 [ 60%]  (Sampling)
Iteration: 2300 / 4000 [ 57%]  (Sampling)
Iteration: 2400 / 4000 [ 60%]  (Sampling)
Iteration: 2500 / 4000 [ 62%]  (Sampling)
Iteration: 2500 / 4000 [ 62%]  (Sampling)
Iteration: 2400 / 4000 [ 60%]  (Sampling)
Iteration: 2500 / 4000 [ 62%]  (Sampling)
Iteration: 2600 / 4000 [ 65%]  (Sampling)
Iteration: 2500 / 4000 [ 62%]  (Sampling)
Iteration: 2600 / 4000 [ 65%]  (Sampling)
Iteration: 2600 / 4000 [ 65%]  (Sampling)
Iteration: 2700 / 4000 [ 67%]  (Sampling)
Iteration: 2700 / 4000 [ 67%]  (Sampling)
Iteration: 2600 / 4000 [ 65%]  (Sampling)
Iteration: 2700 / 4000 [ 67%]  (Sampling)
Iteration: 2800 / 4000 [ 70%]  (Sampling)
Iteration: 2800 / 4000 [ 70%]  (Sampling)
Iteration: 2700 / 4000 [ 67%]  (Sampling)
Iteration: 2800 / 4000 [ 70%]  (Sampling)
Iteration: 2900 / 4000 [ 72%]  (Sampling)
Iteration: 2900 / 4000 [ 72%]  (Sampling)
Iteration: 2800 / 4000 [ 70%]  (Sampling)
Iteration: 2900 / 4000 [ 72%]  (Sampling)
Iteration: 3000 / 4000 [ 75%]  (Sampling)
Iteration: 3000 / 4000 [ 75%]  (Sampling)
Iteration: 2900 / 4000 [ 72%]  (Sampling)
Iteration: 3100 / 4000 [ 77%]  (Sampling)
Iteration: 3000 / 4000 [ 75%]  (Sampling)
Iteration: 3000 / 4000 [ 75%]  (Sampling)
Iteration: 3100 / 4000 [ 77%]  (Sampling)
Iteration: 3200 / 4000 [ 80%]  (Sampling)
Iteration: 3200 / 4000 [ 80%]  (Sampling)
Iteration: 3100 / 4000 [ 77%]  (Sampling)
Iteration: 3100 / 4000 [ 77%]  (Sampling)
Iteration: 3300 / 4000 [ 82%]  (Sampling)
Iteration: 3200 / 4000 [ 80%]  (Sampling)
Iteration: 3300 / 4000 [ 82%]  (Sampling)
Iteration: 3200 / 4000 [ 80%]  (Sampling)
Iteration: 3400 / 4000 [ 85%]  (Sampling)
Iteration: 3300 / 4000 [ 82%]  (Sampling)
Iteration: 3400 / 4000 [ 85%]  (Sampling)
Iteration: 3300 / 4000 [ 82%]  (Sampling)
Iteration: 3500 / 4000 [ 87%]  (Sampling)
Iteration: 3400 / 4000 [ 85%]  (Sampling)
Iteration: 3500 / 4000 [ 87%]  (Sampling)
Iteration: 3400 / 4000 [ 85%]  (Sampling)
Iteration: 3600 / 4000 [ 90%]  (Sampling)
Iteration: 3500 / 4000 [ 87%]  (Sampling)
Iteration: 3600 / 4000 [ 90%]  (Sampling)
Iteration: 3700 / 4000 [ 92%]  (Sampling)
Iteration: 3500 / 4000 [ 87%]  (Sampling)
Iteration: 3600 / 4000 [ 90%]  (Sampling)
Iteration: 3700 / 4000 [ 92%]  (Sampling)
Iteration: 3800 / 4000 [ 95%]  (Sampling)
Iteration: 3700 / 4000 [ 92%]  (Sampling)
Iteration: 3600 / 4000 [ 90%]  (Sampling)
Iteration: 3800 / 4000 [ 95%]  (Sampling)
Iteration: 3900 / 4000 [ 97%]  (Sampling)
Iteration: 3800 / 4000 [ 95%]  (Sampling)
Iteration: 3900 / 4000 [ 97%]  (Sampling)
Iteration: 3700 / 4000 [ 92%]  (Sampling)
Iteration: 4000 / 4000 [100%]  (Sampling)

 Elapsed Time: 0.773416 seconds (Warm-up)
               0.862339 seconds (Sampling)
               1.63576 seconds (Total)

Iteration: 3900 / 4000 [ 97%]  (Sampling)
Iteration: 4000 / 4000 [100%]  (Sampling)

 Elapsed Time: 0.738231 seconds (Warm-up)
               0.931035 seconds (Sampling)
               1.66927 seconds (Total)

Iteration: 3800 / 4000 [ 95%]  (Sampling)
Iteration: 4000 / 4000 [100%]  (Sampling)

 Elapsed Time: 0.834576 seconds (Warm-up)
               0.899381 seconds (Sampling)
               1.73396 seconds (Total)

Iteration: 3900 / 4000 [ 97%]  (Sampling)
Iteration: 4000 / 4000 [100%]  (Sampling)

 Elapsed Time: 0.850472 seconds (Warm-up)
               1.03115 seconds (Sampling)
               1.88162 seconds (Total)

